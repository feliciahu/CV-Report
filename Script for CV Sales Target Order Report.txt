--CV SALES TARGER ORDER REPORT
--HIERARCHY INFO
SELECT    CUST.CUST_ACCT_ID,
          CUST.CUST_ACCT_NAM,
          REP.REP_NAME,
          REP.ROLE_TYPE,
          REP.BUS_SGMNT
FROM      PRD_PSAS_ANALYTICS_DB.GOLD_MASTER.VW_CUST_MSTR CUST --CAN ALSO USE THE PRD CUST TABLE
LEFT JOIN PRD_PSAS_ANALYTICS_DB.GOLD_CRM.VW_REP_HIERARCHY REP
ON        LTRIM(REP.CUST_ACCT_ID,'0')=LTRIM(CUST.CUST_ACCT_ID,'0')
WHERE     REP.CURRENT_RECORD_IND = 'Y'
AND       CUST.CURRENT_RECORD_IND = 'Y'
AND       REP.ROLE_TYPE='SSM'
AND       REP.BUS_SGMNT='CPH';

CREATE OR REPLACE TABLE SBX_PSAS_DB.ANALYTICS.CV_REPORT_REP_CUST (
CUST_ACCT_ID VARCHAR(99),
CUST_ACCT_NAM VARCHAR(99),
REP_NAME VARCHAR(99),
ROLE_TYPE VARCHAR(99),
BUS_SGMNT VARCHAR(99)	
);

--SELECT * FROM SBX_PSAS_DB.ANALYTICS.CV_REPORT_REP_CUST; 
--4.7k RECORDS

--FIND PO 12345 TRANSACTIONS
-- CREATE OR REPLACE TABLE DATE_RANGE AS 
-- SELECT current_date as cd
--     ,date_trunc('month', cd) as end_range
--     ,dateadd('month', -1, end_range) as start_range
--     ;

CREATE OR REPLACE TABLE SALES AS 
SELECT      S.SLS_ID
        ,   S.SLS_ID_SEQ_NUM
        ,   S.CUST_PO_NUM
        ,   S.ORIG_CUST_ORDR_ITEM_NUM
        ,   S.DMND_EM_ITEM_NUM
        ,   S.EM_ITEM_NUM
        ,   EQV.SELL_DSCR
        ,   EQV.NDC_NUM AS SALE_NDC
        ,   IW_C.CUST_ACCT_ID
        ,   CUST.CUST_ACCT_NAM
        ,   EQV.EQV_ID
        ,   EQV.TOTAL_PKG_SIZE
        ,   EQV.GNRC_IND
        ,   S.FILL_DC_ID
        ,   DTL.ONE_DAY_RPEAT_OMIT_CD
        ,   DTL.TWO_DAY_RPEAT_OMIT_CD
        ,   DTL.THREE_DAY_RPEAT_OMIT_CD
        ,   DTL.FOUR_DAY_RPEAT_OMIT_CD
        ,   DTL.FIVE_DAY_RPEAT_OMIT_CD
        ,   DTL.SIX_DAY_RPEAT_OMIT_CD
        ,   DTL.WKLY_RPEAT_OMIT_CD
        ,   S.SO_PRC_DT
        ,   S.SLS_PROC_WRK_DT
        ,   CASE WHEN S.SO_PRC_DT IN ('',' ') THEN DATEADD(DAY,-1,S.SLS_PROC_WRK_DT) ELSE TO_DATE(S.SO_PRC_DT,'YYYYMMDD') END AS ORDER_DATE
        ,   S.ORDR_QTY
        ,   S.SLS_QTY
       -- ,    (S.SLS_QTY * DN3.AMT) AS DN3_COST_EXT
       -- ,   DN3.AMT AS DN3_COST
        ,    (S.SLS_QTY * DN2.AMT) AS DN2_COST_EXT
        ,   DN2.AMT AS DN2_COST
        ,   NS.ITM_CHGBK_PRC_AMT AS NS_COST
        ,  (S.SLS_QTY * NS.ITM_CHGBK_PRC_AMT) AS NS_COST_EXT
        ,   S.SLS_AMT AS INVC_AMT
        ,   CASE WHEN S.SLS_QTY=0 THEN 0 ELSE (S.SLS_AMT / S.SLS_QTY) END AS SLS_PRC 
        ,   CASE WHEN E.SELL_DSCR LIKE '%NSTR%' THEN 'Y' ELSE 'N' END AS NS_FLAG
        ,   CASE WHEN CUST.REP_NAME IS NULL THEN 'OTHER' ELSE CUST.REP_NAME END AS REP_NAME
        ,   CASE WHEN CUST.BUS_SGMNT IS NULL THEN 'OTHER' ELSE CUST.BUS_SGMNT END AS BUS_SGMNT
        ,   CASE WHEN CUST.ROLE_TYPE IS NULL THEN 'OTHER' ELSE CUST.ROLE_TYPE END AS ROLE_TYPE 
        ,   RANK() OVER (PARTITION BY IW_C.CUST_ACCT_ID,S.EM_ITEM_NUM ORDER BY S.SLS_PROC_WRK_DT DESC) AS SALES_ORDER_RANK
        ,   CASE WHEN S.SLS_PROC_WRK_DT BETWEEN '2023-12-01' AND '2023-12-31' THEN 1 ELSE 0 END AS LAST_MONTH_FLAG 
FROM        "PRD_PSAS_DB"."RPT"."T_SLA_CUST_ORD_DTL" AS DTL
LEFT JOIN   "PRD_PSAS_DB"."RPT"."T_SLA_CUST_ACCT" AS C 
ON          C.CUST_ACCT_SURR_KEY = DTL.CUST_ACCT_SURR_KEY
LEFT JOIN   "PRD_PSAS_DB"."RPT"."T_SLA_EM_ITEM" AS E 
ON          E.ITEM_SURR_KEY = DTL.ORIG_ITEM_SURR_KEY
LEFT JOIN   PRD_PSAS_DB.RPT.P_SALE_ITEM AS S
ON          DTL.PO_EOE_ID = S.PO_EOE_ID 
AND         DTL.CUST_PO_LINE_NUM = S.PO_EOE_LIN_NUM 
AND         LTRIM(S.CUST_ACCT_ID,'0') = LTRIM(C.CUST_ACCT_ID,'0') 
AND         S.DMND_EM_ITEM_NUM = E.EM_ITEM_NUM 
--LEFT JOIN   PRD_ENT_PL_DATALAKE_DB.PHARMA_SQLSVR.V_T_ITEM_COST DN3  
--ON          DN3.EM_ITEM_NUM = S.EM_ITEM_NUM
--AND         S.SLS_PROC_WRK_DT BETWEEN DN3.EFF_DT AND DN3.END_DT
--AND         DN3.COST_ID = '34' --DN3
LEFT JOIN   PRD_ENT_PL_DATALAKE_DB.PHARMA_SQLSVR.V_T_ITEM_COST DN2 
ON          DN2.EM_ITEM_NUM = S.EM_ITEM_NUM
AND         S.SLS_PROC_WRK_DT BETWEEN DN2.EFF_DT AND DN2.END_DT
AND         DN2.COST_ID = '33' --DN2
LEFT JOIN   PRD_PSAS_DB.RPT.T_CMS_LEAD_ITEM_HIST NS --NS COST
ON          NS.EM_ITEM_NUM = S.EM_ITEM_NUM
AND         S.SLS_PROC_WRK_DT BETWEEN NS.BEG_DT AND NS.END_DT
AND         NS.CNTRC_LEAD_ID = '767453'
LEFT JOIN   PRD_PSAS_DB.RPT.GX_EQV_ID_ITEMS_EXPANDED EQV
ON          S.DMND_EM_ITEM_NUM=EQV.EM_ITEM_NUM
LEFT JOIN   PRD_PSAS_DB.RPT.T_IW_EM_ITEM IW
ON          S.DMND_EM_ITEM_NUM=IW.EM_ITEM_NUM
LEFT JOIN   PRD_PSAS_DB.RPT.T_IW_CUST_ACCT IW_C
ON          LTRIM(IW_C.CUST_ACCT_ID,'0')=LTRIM(S.CUST_ACCT_ID,'0')
LEFT JOIN   PRD_PSAS_DB.RPT.T_NATL_GRP NG
ON          NG.NATL_GRP_CD=S.SLS_NATL_GRP_CD
LEFT JOIN   SBX_PSAS_DB.ANALYTICS.CV_REPORT_REP_CUST CUST -- REP HIERARCHY
ON          LTRIM(CUST.CUST_ACCT_ID,'0')=LTRIM(IW_C.CUST_ACCT_ID,'0')
WHERE       S.SLS_PROC_WRK_DT >= '2023-04-01' --FY24
--WHERE     S.SLS_PROC_WRK_DT >= DATEADD(DAY,-90,CURRENT_DATE)
--AND         S.CUST_ACCT_ID = '075103' 
--AND         S.EM_ITEM_NUM = '712434'
AND         S.CUST_PO_NUM = '12345'
AND         S.ORDR_QTY > 0 
AND         S.SLS_QTY > 0
AND         S.DOC_TYP_CD = 'B' -- BILLING DOCUMENTS (DOCTYP == M IS MATERIAL MOVEMENT)
AND         S.TXN_CD <> '6870'
AND         S.TXN_CD NOT IN ('6144','6151','6185','6193','6219','6227','6266','6524','6581','6599','6754','6734','6516','6235')
AND         S.SLS_CUST_CHN_ID NOT IN ('160','928','007','969','180','206','410','928') -- EXCLUDE MCK BUS UNITS
AND         S.SLS_CUST_BUS_TYP_CD NOT IN ('18','19','20')
;

CREATE OR REPLACE TABLE SBX_PSAS_DB.ANALYTICS.CV_REPORT AS 
SELECT *,
CASE WHEN NS_FLAG='Y' AND NS_COST_EXT<>0 THEN NS_COST_EXT 
     WHEN NS_FLAG='Y' AND (NS_COST_EXT=0 OR NS_COST_EXT IS NULL) THEN DN2_COST_EXT
     WHEN NS_FLAG='N' THEN DN2_COST_EXT END AS COST_EXT,
INVC_AMT-COST_EXT AS GROSS_PROFIT
FROM SALES;

--SELECT * FROM SBX_PSAS_DB.ANALYTICS.CV_REPORT;



--GET NS LANDED COST
SELECT  CNTRC_LEAD_ID, EM_ITEM_NUM, BEG_DT, END_DT, ITM_CHGBK_PRC_AMT AS NS_COST
FROM    PRD_PSAS_DB.RPT.T_CMS_LEAD_ITEM_HIST
WHERE   CNTRC_LEAD_ID = '767453' 
AND     EM_ITEM_NUM = '2649119'
AND     CURRENT_DATE BETWEEN BEG_DT AND END_DT
;

--GET DN2 COST
SELECT  * 
FROM    PRD_ENT_PL_DATALAKE_DB.PHARMA_SQLSVR.V_T_ITEM_COST 
WHERE   EM_ITEM_NUM = '1248905'
AND     COST_ID = '33'
--AND     CURRENT_DATE BETWEEN EFF_DT AND END_DT
;
